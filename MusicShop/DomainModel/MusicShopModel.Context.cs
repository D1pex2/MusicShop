//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MusicShop.DomainModel
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class MusicShopEntities : DbContext
    {
        public MusicShopEntities()
            : base("name=MusicShopEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Category> Categories { get; set; }
        public virtual DbSet<Manufacturer> Manufacturers { get; set; }
        public virtual DbSet<Order> Orders { get; set; }
        public virtual DbSet<ProductImage> ProductImages { get; set; }
        public virtual DbSet<Role> Roles { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<Cart> Carts { get; set; }
        public virtual DbSet<OrderProduct> OrderProducts { get; set; }
        public virtual DbSet<Comment> Comments { get; set; }
        public virtual DbSet<OrderView> OrderViews { get; set; }
        public virtual DbSet<Product> Products { get; set; }
    
        public virtual int CreateOrderFromCart(Nullable<int> idUser, Nullable<System.DateTime> deliveryDate, string deliveryAddress)
        {
            var idUserParameter = idUser.HasValue ?
                new ObjectParameter("idUser", idUser) :
                new ObjectParameter("idUser", typeof(int));
    
            var deliveryDateParameter = deliveryDate.HasValue ?
                new ObjectParameter("deliveryDate", deliveryDate) :
                new ObjectParameter("deliveryDate", typeof(System.DateTime));
    
            var deliveryAddressParameter = deliveryAddress != null ?
                new ObjectParameter("deliveryAddress", deliveryAddress) :
                new ObjectParameter("deliveryAddress", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateOrderFromCart", idUserParameter, deliveryDateParameter, deliveryAddressParameter);
        }
    }
}
